#!/usr/bin/env python3

"""
Run all scripts.

They should exit 0.
"""

import subprocess
import sys
import os
import os.path

rootdir = os.path.split(os.path.realpath(__file__))[0]

blacklist = set([
    # Broken, haven't fixed or investigated further because lazy.
    'main',

    # Ubuntu 18.10, f7a18231432ccd41595e62a6be9c8b4b336a1dbb + 1:
    #
    #     ImportError: No module named pure
    #     Failed to load "pure"
    'py_from_c',

    # RuntimeError: module compiled against API version 0xb but this version of numpy is 0xa
    'pandas_cheat',

    # Large download.
    'nltk_cheat',

    # pip build takes too long
    'numpy_cheat',
    'scipy_cheat',

    # Networking.
    'smtplib_cheat',
    'urllib2_cheat',

    # Infinite loop!
    'test',

    # Perceptible time.
    'concurrent_cheat',
    'thread_limit',

    # Meant to fail.
    'unittest_cheat',

    'wsgi',
])

ext = '.py'
# TODO: remove this and run all .py files
scripts = []
directories = []
for f in sorted(os.listdir(u'.')):
    if os.path.isfile(f):
        if os.access(f, os.X_OK):
            noext, ext = os.path.splitext(f)
            if ext == '.py' and not noext in blacklist:
                scripts.append(f)
    elif os.path.isdir(f):
        if not f in blacklist:
            directories.append(os.path.abspath(f))

# Files.
for script in scripts:
    print(script)
    sys.stdout.flush()
    process = subprocess.Popen(
        ['./' + script],
        shell  = False,
        stdin  = subprocess.PIPE,
        stdout = subprocess.PIPE,
        stderr = subprocess.PIPE,
        universal_newlines = True
    )
    if process.wait() != 0:
        print('ASSERT FAILED: ' + script)
        sys.exit(1)

# Directories.
for directory in directories:
    directory_base = os.path.basename(directory)
    test_script = os.path.join(directory, 'test')
    if os.path.exists(test_script):
        print(directory_base + os.sep)
        os.chdir(directory)
        if os.path.exists(os.path.join(directory, 'Makefile')):
            process = subprocess.Popen(
                ['make'],
                shell  = False,
                stdin  = subprocess.PIPE,
                stdout = subprocess.PIPE,
                stderr = subprocess.PIPE,
            )
            assert process.wait() == 0
        process = subprocess.Popen(
            [test_script],
            shell  = False,
            stdin  = subprocess.PIPE,
            stdout = subprocess.PIPE,
            stderr = subprocess.PIPE,
        )
        if process.wait() != 0:
            print('ASSERT FAILED: ' + directory_base)
            sys.exit(1)

print('ALL ASSERTS PASSED')
